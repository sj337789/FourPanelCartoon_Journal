# 이 스크립트는 Kaggle Notebook에서 파이썬 프로그래밍 언어를 사용해서 실행했음.
# 레이블링 작업 후 실행한 이 파이썬 코드로 YOLOv5 미세조정을 통해 가중치를 구했음.

from os import listdir 
from os.path import isfile, join 
import yaml 
from glob import glob
import shutil 
import numpy as np 
import pandas as pd 
from IPython.display import Image 

!git clone https://github.com/ultralytics/yolov5
%cd yolov5
%pip install -qr requirements.txt

# creating text files to the corresponding images
cwd = '/kaggle/working/'

with open(join( cwd , 'train.txt'), 'w') as f:
    for path in glob('/kaggle/input/yonkoma-object-detectionv1iyolov5pytorch/train/images/*'):
        f.write(path+'\n')
            
with open(join( cwd , 'val.txt'), 'w') as f:
    for path in glob('/kaggle/input/yonkoma-object-detectionv1iyolov5pytorch/valid/images/*'):
        f.write(path+'\n')

with open(join( cwd , 'test.txt'), 'w') as f:
    for path in glob('/kaggle/input/yonkoma-object-detectionv1iyolov5pytorch/test/images/*'):
        f.write(path+'\n')

# Creating YAML file
data = dict(
    train = join( cwd , 'train.txt'),
    val   = join( cwd , 'val.txt' ),
    test = join(cwd, 'test.txt'),
    nc    = 2, # number of class = 1
    names = ['Yonkoma_2x2', 'Yonkoma_4x1']
    )

with open(join( cwd , 'Yonkoma.yaml'), 'w') as outfile:
    yaml.dump(data, outfile, default_flow_style=False)

f = open(join( cwd , 'Yonkoma.yaml'), 'r')
print('\nyaml:')
print(f.read())
    
# 학습. (Batch_size = 8, epoch =1000, patience = 30)
!python train.py --batch 8 --epochs 1000 --data /kaggle/working/Yonkoma.yaml --patience 30
